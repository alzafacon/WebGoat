name: "Pull requests build"
on:
    pull_request:
        paths-ignore:
            - '.txt'
            - 'LICENSE'
            - 'docs/**'

jobs:
    pr-build:
        if: >
            github.event_name == 'pull_request' && !github.event.pull_request.draft && (
              github.event.action == 'opened' ||
              github.event.action == 'reopened' ||
              github.event.action == 'synchronize' 
            )
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest ]
        env:
            JFROG_BUILD_STATUS: PASS
        steps:
            -   uses: actions/checkout@v3
            -   name: Setup JFrog CLI
                uses: jfrog/setup-jfrog-cli@v3
                env:
                    JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
            -   run: jf rt ping
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: 'temurin'
                    java-version: 17
                    architecture: x64
            -   name: Cache Maven packages
                uses: actions/cache@v3.3.1
                with:
                    path: ~/.m2
                    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                    restore-keys: ${{ runner.os }}-m2-
            -   name: Build with Maven
                run: |
                    # Init JFrog CLI Maven config
                    MVN_PATH=`which mvn` && export M2_HOME=`readlink -f $MVN_PATH | xargs dirname | xargs dirname`
                    # Replace ‘my_art_server’ with your imported server
                    jfrog mvn-config --server-id-resolve=idlhandsdemo --repo-resolve-releases=default-libs-release --repo-resolve-snapshots=default-libs-snapshot
                    # Build the maven project
                    jfrog mvn clean install
                    # mvn --no-transfer-progress verify
            -   name: Failure check
                run: |
                    echo "JFROG_BUILD_STATUS=FAIL" >> $GITHUB_ENV
                if: failure()
            -   name: Publish Maven build
                run: |
                    # Collect environment variables for the build
                    jfrog rt bce
                    # Collect VCS details from git and add them to the build
                    jfrog rt bag
                    # Publish build info
                    jfrog rt bp
                    # Scan build
                    jfrog build-scan
                if: always()